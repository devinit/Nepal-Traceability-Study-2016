narrative = list(
attrs=c("xml:lang"="en")
,text="Kathmandu"
)
)
,point = list(
attrs = c(
srsName="http://geonames.org/1283241"
)
,pos = "27.70704 85.33218"
)
,exactness = list(
attrs = c(
code="1"
)
)
,"location-class" = list(
attrs = c(
code="1"
)
)
)
,"Laprak" = list(
attrs = c(
ref="geoname_id"
)
,"location-id" = list(
attrs = c(
code="10328411"
,vocabulary="G1"
)
)
,name = list(
narrative = list(
attrs=c("xml:lang"="en")
,text="Laprak"
)
)
,point = list(
attrs = c(
srsName="http://geonames.org/10328411"
)
,pos = "28.25424 84.78469"
)
,exactness = list(
attrs = c(
code="1"
)
)
,"location-class" = list(
attrs = c(
code="1"
)
)
)
,"Makaising" = list(
attrs = c(
ref="geoname_id"
)
,"location-id" = list(
attrs = c(
code="7801826"
,vocabulary="G1"
)
)
,name = list(
narrative = list(
attrs=c("xml:lang"="en")
,text="Makaising"
)
)
,point = list(
attrs = c(
srsName="http://geonames.org/7801826"
)
,pos = "27.88021 84.6585"
)
,exactness = list(
attrs = c(
code="1"
)
)
,"location-class" = list(
attrs = c(
code="1"
)
)
)
,"Finam" = list(
attrs = c(
ref="geoname_id"
)
,"location-id" = list(
attrs = c(
code="7799037"
,vocabulary="G1"
)
)
,name = list(
narrative = list(
attrs=c("xml:lang"="en")
,text="Finam"
)
)
,point = list(
attrs = c(
srsName="http://geonames.org/7799037"
)
,pos = "28.004 84.6567"
)
,exactness = list(
attrs = c(
code="1"
)
)
,"location-class" = list(
attrs = c(
code="1"
)
)
)
,"Takumajhalakuribot" = list(
attrs = c(
ref="geoname_id"
)
,"location-id" = list(
attrs = c(
code="7799396"
,vocabulary="G1"
)
)
,name = list(
narrative = list(
attrs=c("xml:lang"="en")
,text="Takumajhalakuribot"
)
)
,point = list(
attrs = c(
srsName="http://geonames.org/7799396"
)
,pos = "28.1006 84.681"
)
,exactness = list(
attrs = c(
code="1"
)
)
,"location-class" = list(
attrs = c(
code="1"
)
)
)
,"Bhedapu" = list(
attrs = c(
ref="geoname_id"
)
,"location-id" = list(
attrs = c(
code="7801794"
,vocabulary="G1"
)
)
,name = list(
narrative = list(
attrs=c("xml:lang"="en")
,text="Bhedapu"
)
)
,point = list(
attrs = c(
srsName="http://geonames.org/7801794"
)
,pos = "27.53521 86.05984"
)
,exactness = list(
attrs = c(
code="1"
)
)
,"location-class" = list(
attrs = c(
code="1"
)
)
)
,"Bhusaphedi" = list(
attrs = c(
ref="geoname_id"
)
,"location-id" = list(
attrs = c(
code="7800618"
,vocabulary="G1"
)
)
,name = list(
narrative = list(
attrs=c("xml:lang"="en")
,text="Bhusaphedi"
)
)
,point = list(
attrs = c(
srsName="http://geonames.org/7800618"
)
,pos = "27.64418 85.93448"
)
,exactness = list(
attrs = c(
code="1"
)
)
,"location-class" = list(
attrs = c(
code="1"
)
)
)
)
listToXML <- function(node, sublist){
for(i in 1:length(sublist)){
if(length(names(sublist)[i])>0){
if(names(sublist)[i]=="attrs"){
xmlAttrs(node) <- sublist[[i]]
}else if(names(sublist)[i]=="text"){
if(is.null(sublist[[i]])){
xmlValue(node) <- ""
} else if(is.na(sublist[[i]])){
xmlValue(node) <- ""
}else{
xmlValue(node) <- sublist[[i]]
}
}else {
child <- newXMLNode(names(sublist)[i], parent=node);
if (typeof(sublist[[i]]) == "list"){
listToXML(child, sublist[[i]])
}
else{
if(is.null(sublist[[i]])){
xmlValue(child) <- ""
}else if(is.na(sublist[[i]])){
xmlValue(child) <- ""
}else{
xmlValue(child) <- sublist[[i]]
}
}
}
}
}
}
splitLocat <- function(str){
if(!is.null(str)){
if(!is.na(str)){
if(grepl(",",str,fixed=TRUE)){
split <- strsplit(str,",",fixed=TRUE)[[1]]
split <- sapply(split,trimws)
return(split)
}else{
return(c(str))
}
}else{return("")}
}else(return(""))
}
####Generate IATI####
now <- format(Sys.time(),"%Y-%m-%dT%TZ",tz="UTC")
activityAttrs = c("last-updated-datetime"=now, "xml:lang"="en", "default-currency"="USD", "hierarchy"="1", "linked-data-uri"="")
dirs <- list.dirs(wd,full.names=TRUE)
for(d in 2:length(dirs)){
setwd(dirs[d])
df <- read.csv("activities.csv",na.strings="",as.is=TRUE)
dt <- read.csv("transactions.csv",na.strings="",as.is=TRUE)
df[is.na(df)] <- ""
dt[is.na(dt)] <- ""
li <- list()
for(i in 1:nrow(df)){
activity <- df[i,]
activityList <- list(attrs=activityAttrs)
if(substr(activity$Project.ID,1,3) %in% validIDs){
activityList[['iati-identifier']] <- activity$Project.ID
}else{
activityList[['iati-identifier']] <- paste(repOrg,activity$Project.ID,sep="-")
}
activityList[['reporting-org']] <- list(
attrs=c(ref=repOrg,type="70","secondary-reporter"="1")
,narrative=list(
attrs=c("xml:lang"="en")
,text=repOrgName
)
)
activityList[['title']] <- list(
narrative=list(
attrs=c("xml:lang"="en")
,text=activity$Project.title
)
)
activityList[['description']] <- list(
narrative=list(
attrs=c("xml:lang"="en")
,text=activity$Project.description
)
)
activityList[['participating-org']] <- list(
attrs=c(ref=activity$Participating.organisation,role="3")
,narrative=list(
attrs=c("xml:lang"="en")
,text=activity$Participating.organisation
)
)
activityList[['activity-status']] <- list(attrs=c(code=statusList[[activity$Project.status]]))
activityList <- c(activityList
,list(
"activity-date" = list(
attrs=c(type="2","iso-date"=activity$Start.date)
,narrative=list(attrs=c("xml:lang"="en"))
)
,"activity-date" = list(
attrs=c(type="4","iso-date"=activity$End.date)
,narrative=list(attrs=c("xml:lang"="en"))
)
)
)
activityList[['contact-info']] <- list(
attrs=c(type=activity$Contact.type)
,organisation = list(
narrative = list(
attrs=c("xml:lang"="en")
,text=activity$Contact.organisation
)
)
,department = list(
narrative = list(
attrs=c("xml:lang"="en")
,text=activity$Contact.department
)
)
,"person-name" = list(
narrative = list(
attrs=c("xml:lang"="en")
,text=activity$Contact.name
)
)
,"job-title" = list(
narrative = list(
attrs=c("xml:lang"="en")
,text=activity$Contact.title
)
)
,telephone = activity$Contact.telephone
,email = activity$Contact.email
,website = activity$Contact.website
,"mailing-address" = list(
narrative = list(
attrs=c("xml:lang"="en")
,text=activity$Contact.address
)
)
)
activityList[['recipient-country']] <- list(
attrs=c(code="NP",percentage="100")
)
splits <- unique(splitLocat(activity$Project.location))
for(k in 1:length(splits)){
split <- splits[k]
if(split!=""){
locat <- locatList[[split]]
activityList <- c(activityList
,list(
"location" = locat
)
)
}
}
activityList[['sector']] <- list(
attrs=c(vocabulary="99",code="")
,narrative = list(
attrs=c("xml:lang"="en")
,text=activity$Cluster
)
)
activityList[['budget']] <- list(
attrs=c(type="")
,"period-start"=list(attrs=c("iso-date"=activity$Budget.period.start))
,"period-end"=list(attrs=c("iso-date"=activity$Budget.period.end))
,"value"=list(
attrs=c(
"currency"=activity$Budget.currency
,"value-date"=activity$Budget.period.start
)
,text=activity$Budget.amount
)
)
transactions <- dt[which(dt$Project.ID==activity$Project.ID),]
for(j in 1:nrow(transactions)){
transaction <- transactions[j,]
transactionList <- list(attrs=c(ref=transaction$Transaction.type))
transactionList[['transaction-type']] <- list(
attrs = c(code = transTypeList[[tolower(transaction$Transaction.type)]])
)
if(is.null(transTypeList[[tolower(transaction$Transaction.type)]])){
message(transaction$Transaction.type)
}
transactionList[['transaction-date']] <- list(
attrs = c("iso-date" = transaction$Transaction.date)
,narrative = list(
attrs=c("xml:lang"="en")
,text=activity$Transaction.date.narrative
)
)
transactionList[['value']] <- list(
attrs = c(
"currency" = transaction$Currency
,"value-date" = transaction$Transaction.date
)
,text = transaction$Value
)
transactionList[['description']] <- list(
narrative=list(
attrs=c("xml:lang"="en")
,text=transaction$Description
)
)
transactionList[['provider-org']] <- list(
attrs = c(ref="","provider-activity-id"="")
,narrative = list(
attrs=c("xml:lang"="en")
,text=transaction$Provider
)
)
transactionList[['receiver-org']] <- list(
attrs = c(ref="","receiver-activity-id"="")
,narrative = list(
attrs=c("xml:lang"="en")
,text=transaction$Receiver
)
)
transactionList[['sector']] <- list(
attrs=c(vocabulary="99",code="")
,narrative = list(
attrs=c("xml:lang"="en")
,text=transaction$Sector
)
)
transactionList[['finance-type']] <- list(
attrs=c(code=transaction$Finance.type)
)
activityList <- c(activityList
,list(
"transaction" = transactionList
)
)
}
if(substr(activity$Parent.project.ID,1,3) %in% validIDs){
activityList[['related-activity']] <- list(
attrs=c(
ref=activity$Parent.project.ID
,type="1"
)
)
}else{
activityList[['related-activity']] <- list(
attrs=c(
ref=paste(repOrg,activity$Parent.project.ID,sep="-")
,type="1"
)
)
}
activityList[['result']] <- list(
attrs=c(type="","aggregation-status"="false")
,title = list(
narrative = list(
attrs=c("xml:lang"="en")
,text=""
)
)
,description = list(
narrative = list(
attrs=c("xml:lang"="en")
,text=activity$Project.result
)
)
,indicator = list(
attrs = c(
measure=""
,ascending="1"
)
,title= list(
narrative = list(
attrs=c("xml:lang"="en")
,text=""
)
)
)
)
li <- c(li, list("iati-activity" = activityList))
}
root <- newXMLNode("iati-activities",attrs=c(version = "2.01","generated-datetime" = now))
#Suppress namespace warning due to multiple activities/transactions
options("suppressXMLNamespaceWarning" = TRUE)
listToXML(root, li)
saveXML(root
, file="gha_iati.xml"
, compression=0
, indent=TRUE
#         , prefix = '<?xml version="1.0"?>\n'
, encoding = getEncoding(root)
#            , encoding = "utf8"
)
setwd(wd)
}
newXMLNode
